name: AWS Infrastructure GitFlow Pipeline

on:
  push:
    branches:
      - dev
      - main
      - 'cleanup/*'   # auto-destroy when cleanup branches are pushed
    # paths:
    #   - 'live/**'

env:
  TF_INPUT: false
  TERRAGRUNT_TFPATH: terraform
  AWS_REGION: us-east-2
  TF_VERSION: 1.13.3
  TERRAGRUNT_VERSION: 0.90.0

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.set-env.outputs.env-name }}
    steps:
      - name: Determine Environment
        id: set-env
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "env-name=prod" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "env-name=dev" >> $GITHUB_OUTPUT
          else
            echo "env-name=cleanup" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    environment: ${{ needs.setup.outputs.env-name }}

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', upper(needs.setup.outputs.env-name))] }}
          aws-secret-access-key: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', upper(needs.setup.outputs.env-name))] }}
          aws-region: ${{ env.AWS_REGION }}

      # 3Ô∏è‚É£ Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.13.3

      # 4Ô∏è‚É£ Install Terragrunt
      - name: Install Terragrunt
        run: |
          curl -L https://github.com/gruntwork-io/terragrunt/releases/download/${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64 -o terragrunt
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/

      # 5Ô∏è‚É£ Deploy or Destroy
      - name: Deploy/Destroy Infrastructure
        working-directory: live
        run: |
          ENV="${{ needs.setup.outputs.env-name }}"
          
          if [[ "$ENV" == "cleanup" ]]; then
            echo "üßπ Running destroy for cleanup branch..."
            # Determine environment from cleanup branch name
            CLEAN_ENV=$(echo "${GITHUB_REF##*/}" | cut -d'-' -f2)
            echo "Cleaning environment: $CLEAN_ENV"
            cd $CLEAN_ENV || exit 1
            terragrunt run-all destroy --auto-approve --terragrunt-non-interactive
          else
            echo "üöÄ Deploying environment: $ENV"
            cd $ENV
            terragrunt run-all apply --auto-approve --terragrunt-non-interactive
          fi
